<?php

namespace Tests\Unit;

use App\Channel;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\DatabaseMigrations;


/**
 * @property  thread
 */

class ThreadTest extends TestCase
{
    protected $thread;
    use DatabaseMigrations;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->thread= create('App\Thread');

    }

    /** @test  */

    function a_thread_has_replies(){

         $this->assertInstanceOf('Illuminate\Database\Eloquent\Collection',$this->thread->replies);
    }
    /** @test  */

    function a_thread_can_make_a_string_path(){

        $thread=create('App\Thread');

        $this->assertEquals('/threads/'.$thread->channel->slug.'/'.$thread->id,$thread->path());
    }


    /** @test  */

    function a_thread_has_creator(){

        $this->assertInstanceOf('App\User',$this->thread->creator);
    }
    /** @test  */

    function a_thread_can_add_a_reply(){


        $this->thread->addreply([
            'body'=>'balalaw',
            'user_id'=>1
        ]);

        $this->assertCount(1,$this->thread->replies);
    }
    /** @test  */
    function a_thread_belongs_to_channel(){

        $thread= create('App\Thread');

        $this->assertInstanceOf(Channel::class,$thread->channel);
    }
}
